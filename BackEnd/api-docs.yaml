openapi: 3.0.3
info:
  title: CF-W-FEN 3.0
  description: |-
    This is a sample DoAn1
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: http://localhost:3000
tags:
  - name: customer
    description: Everything about your customer
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: product
    description: About product
    externalDocs:
      description: Find out more about our product
      url: http://swagger.io
  - name: staff
    description: About staff
paths:
  /customer:
    put:
      tags:
        - customer
      summary: Update an existing customer
      description: Update an existing customer by PhoneNumber
      operationId: updateCustomer
      requestBody:
        description: Update an existent customer in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Customer'
        '400':
          description: Invalid ID supplied
        '404':
          description: Customer not found
        '422':
          description: Validation exception
      security:
        - cfwfenstore_auth:
            - write:customers
            - read:customers
    post:
      tags:
        - customer
      summary: Add a new customer to the store
      description: Add a new customer to the store
      operationId: addCustomer
      requestBody:
        description: Create a new customer in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Customer'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
      security:
        - cfwfenstore_auth:
            - write:customers
            - read:customers
  /customer/{phoneNumber}:
    get:
      tags:
        - customer
      summary: Find pet by phoneNumber
      description: Returns a single customer
      operationId: getCustomerByPhoneNumber
      parameters:
        - name: phoneNumber
          in: path
          description: phoneNumber of customer to return
          required: true
          schema:
            type: string
            maxLength: 15
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'          
        '400':
          description: Invalid PhoneNumber supplied
        '404':
          description: Customer not found
      security:
        - api_key: []
        - cfwfenstore_auth:
            - write:customers
            - read:customers
    post:
      tags:
        - customer
      summary: Updates a customer in the store with form data
      description: ''
      operationId: updateCustomerWithForm
      parameters:
        - name: phoneNumber
          in: path
          description: PhoneNumber of Customer that needs to be updated
          required: true
          schema:
            type: string
            maxLength: 15
        - name: name
          in: query
          description: Name of Customer that needs to be updated
          schema:
            type: string
      responses:
        '400':
          description: Invalid input
      security:
        - cfwfenstore_auth:
            - write:customerts
            - read:customers
    delete:
      tags:
        - customer
      summary: Deletes a Customer
      description: delete a customer
      operationId: deleteCustomer
      parameters:
        - name: api_key
          in: header
          description: ''
          required: false
          schema:
            type: string
        - name: phoneNumber
          in: path
          description: Customer phoneNumber to delete
          required: true
          schema:
            type: string
            maxLength: 15
      responses:
        '400':
          description: Invalid customer value
      security:
        - cfwfenstore_auth:
            - write:customers
            - read:customers
components:
  schemas:
    Customer:
      type: object
      properties:
        phoneNumber:
          type: string
          maxLength: 15
          example: 0981234567
        name:
          type: string
          example: Le Van A
      xml:
        name: customer
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        username:
          type: string
          example: theUser
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: James
        email:
          type: string
          example: john@email.com
        password:
          type: string
          example: '12345'
        phone:
          type: string
          example: '12345'
        userStatus:
          type: integer
          description: User Status
          format: int32
          example: 1
      xml:
        name: user
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: tag
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      xml:
        name: '##default'
  requestBodies:
    Customer:
      description: Customer object that needs to be added to the store
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Customer'
        application/xml:
          schema:
            $ref: '#/components/schemas/Customer'
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/User'
  securitySchemes:
    cfwfenstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://petstore3.swagger.io/oauth/authorize
          scopes:
            write:customers: modify customers in your account
            read:customers: read your customers
    api_key:
      type: apiKey
      name: api_key
      in: header